# Copyright 2018 ARICENT HOLDINGS LUXEMBOURG SARL and Cable Television
# Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script is responsible for deploying Aricent_Iaas environments and
# Kubernetes Services
---
- hosts: localhost
  become: true
  become_user: root
  become_method: sudo
  
  environment:
    http_proxy: "{{ http_proxy | default('') }}"
    https_proxy: "{{ https_proxy | default('') }}"
    no_proxy: "{{ no_proxy | default('') }}"
  
  tasks:
    - name: Add GPG key for kubectl
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - apt_repository:
        repo: 'deb http://apt.kubernetes.io/ kubernetes-xenial main'
        state: present
        filename: '/etc/apt/sources.list.d/kubernetes.list'
        update_cache: 'yes'

    - name: apt install kubectl
      apt:
        name: kubectl
        state: present
        update_cache: yes

    - name: create the /etc/kubectl directory
      file: path=/etc/kubectl
            mode=0755
            state=directory
      
    - stat: path=/etc/kubectl/node-kubeconfig.yaml
      register: st

    - name: copy config file
      copy:
        src: "{{ SRC_PACKAGE_PATH }}/packages/source/config-demo"
        dest: /etc/kubectl/node-kubeconfig.yaml  
      when: st.stat.exists == False

    - name: copy ssl folder from {{ ip }}
      command: "scp -r root@{{ ip }}:/etc/kubernetes/ssl {{ PROJECT_PATH }}/{{ Project_name }}/ssl"
 
    - name: copy kube config
      command: "scp -r root@{{ ip }}:/root/.kube/config {{ PROJECT_PATH }}/{{ Project_name }}/config"

    - name: replace string in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'certificate-authority-data:'
        replace: 'certificate-authority:'

    - name: replace string in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'client-certificate-data:'
        replace: 'client-certificate:'

    - name: replace string in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'client-key-data:'
        replace: 'client-key:'

    - name: add config details to kubectl configuration file for non-HA
      command: kubectl config --kubeconfig=/etc/kubectl/node-kubeconfig.yaml set-cluster {{ Project_name }}_name --server=https://{{ ip }}:6443 --certificate-authority={{ PROJECT_PATH }}/{{ Project_name }}/ssl/ca.pem
      when: {{ ha_enabled }} == "False"
 
    - name: add config details to kubectl configuration file for HA
      command: kubectl config --kubeconfig=/etc/kubectl/node-kubeconfig.yaml set-cluster {{ Project_name }}_name --server=https://{{ lb_ip }}:8383 --certificate-authority={{ PROJECT_PATH }}/{{ Project_name }}/ssl/ca.pem
      when: {{ ha_enabled }} == "True"

    - name: add user details to kubectl configuration file 
      command: kubectl config --kubeconfig=/etc/kubectl/node-kubeconfig.yaml set-credentials {{ Project_name }}_kubelet --client-certificate={{ PROJECT_PATH }}/{{ Project_name }}/ssl/node-{{ host_name }}.pem --client-key={{ PROJECT_PATH }}/{{ Project_name }}/ssl/node-{{ host_name }}-key.pem

    - name: add context details to kubectl configuration file
      command: kubectl config --kubeconfig=/etc/kubectl/node-kubeconfig.yaml set-context {{ Project_name }} --cluster={{ Project_name }}_name --user={{ Project_name }}_kubelet

    - name: set context to kubectl configuration file
      command: kubectl config --kubeconfig=/etc/kubectl/node-kubeconfig.yaml use-context {{ Project_name }}

    - name: export kubectl path
      lineinfile:
           dest: "/root/.bashrc"
           insertbefore: EOF
           line: "export KUBECONFIG=\"/etc/kubectl/node-kubeconfig.yaml\""

    - name: run file
      shell: source /root/.bashrc
      args:
        executable: /bin/bash
 
    - name: Loop over lines in a file
      shell: echo "hello"
      with_lines: cat "{{ PROJECT_PATH }}/{{ Project_name }}/config"
      register: res

    - name: copy ca certificate
      shell: echo "{{ res.results[6].item }}" | sed -e 's/^[ \t]*//'
      register: st
    - debug:
        var: st

    - name: replace ca certificate in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'certificate-authority: {{ PROJECT_PATH }}/{{ Project_name }}/ssl/ca.pem'
        replace: '{{ st.stdout }}'

    - name: Loop over lines in a file
      shell: echo "hello"
      with_lines: cat "{{ PROJECT_PATH }}/{{ Project_name }}/config"
      register: res

    - name: copy client certificate
      shell: echo "{{res.results[17].item}}" | sed -e 's/^[ \t]*//'
      register: st
    - debug:
        var: st

    - name: replace client certificate in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'client-certificate: {{ PROJECT_PATH }}/{{ Project_name }}/ssl/node-{{ host_name }}.pem'
        replace: '{{ st.stdout }}'


    - name: Loop over lines in a file
      shell: echo "hello"
      with_lines: cat "{{ PROJECT_PATH }}/{{ Project_name }}/config"
      register: res

    - name: copy client key certificate
      shell: echo "{{ res.results[18].item }}" | sed -e 's/^[ \t]*//'
      register: st
    - debug:
        var: st

    - name: replace client key certificate in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'client-key: {{ PROJECT_PATH }}/{{ Project_name }}/ssl/node-{{ host_name }}-key.pem'
        replace: '{{ st.stdout }}'

    - name: replace string in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'certificate-authority:'
        replace: 'certificate-authority-data:'

    - name: replace string in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'client-certificate:'
        replace: 'client-certificate-data:'

    - name: replace string in config file 
      replace:
        dest: /etc/kubectl/node-kubeconfig.yaml
        regexp: 'client-key:'
        replace: 'client-key-data:'
