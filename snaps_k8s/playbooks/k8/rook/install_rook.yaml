# Copyright 2019 ARICENT HOLDINGS LUXEMBOURG SARL and Cable Television
# Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script is responsible for deploying Aricent_Iaas environments and
# Kubernetes Services
---
- hosts: localhost

  tasks:
  - name: Create Operator template
    template:
      src: "{{ ROOK_OPERATOR_J2 }}"
      dest: "{{ PROJ_ARTIFACT_DIR }}/rook-operator.yaml"

  - name: Deploy the Rook Operator
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml apply -f {{ PROJ_ARTIFACT_DIR }}/rook-operator.yaml"
    retries: 3
    delay: 10
    register: result
    until: result.rc == 0

  - name: Create Operator template
    template:
      src: "{{ ROOK_CLUSTER_J2 }}"
      dest: "{{ PROJ_ARTIFACT_DIR }}/rook-cluster.yaml"

  - name: Deploy the Rook Cluster
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml apply -f {{ PROJ_ARTIFACT_DIR }}/rook-cluster.yaml"
    retries: 3
    delay: 10
    register: result
    until: result.rc == 0

  - name: Create Storage Class
    template:
      src: "{{ ROOK_STO_CLASS_J2 }}"
      dest: "{{ PROJ_ARTIFACT_DIR }}/rook-storageclass.yaml"

  - name: Deploy the Rook Cluster
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml apply -f {{ PROJ_ARTIFACT_DIR }}/rook-storageclass.yaml"
    retries: 3
    delay: 10
    register: result
    until: result.rc == 0

  - debug: var=rook_volumes
  - name: Persistent Volumes
    include: rook-create-pv.yaml vol_name={{ item.name }} vol_size={{ item.size }} host_path={{ item.path }}
    with_items: "{{ rook_volumes }}"