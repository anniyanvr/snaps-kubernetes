# Copyright 2018 ARICENT HOLDINGS LUXEMBOURG SARL and Cable Television
# Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script is responsible for deploying Aricent_Iaas environments and
# Kubernetes Services
--- 
  hosts: all
  become: true
  become_user: root
  become_method: sudo

  vars:
    master_ips: "{{ MASTER_IP_LIST }}"
  environment:
    http_proxy: "{{ http_proxy | default('')  }}"
    https_proxy: "{{ https_proxy | default('')  }}"
    no_proxy: "{{ no_proxy | default('')  }}"
  tasks:
    -
      name: "install load_balancer "
      apt:
        name: haproxy
        state: present
    -
      name: "check  load_balancer status "
      command: service haproxy status
      register: haproxy_status
      failed_when: "'inactive (dead)' in haproxy_status.stdout"
    -
      debug: "msg={{ haproxy_status.stdout }}"

    -
      name: "check file existence of haproxy.cfg "
      register: haproxy_cfg
      stat: path=/etc/haproxy/haproxy.cfg
    -
      block:
        -
          name: "configure load balancer"
          blockinfile:
            path: /etc/haproxy/haproxy.cfg
            block: |
              listen kubernetes-apiserver-https
                bind *:{{ lb_port }}
                option ssl-hello-chk
                mode tcp
                timeout client 3h
                timeout server 3h
                balance roundrobin

        -
          name: "configure master ip"
          lineinfile:
            dest: /etc/haproxy/haproxy.cfg
            insertbefore: "^\\  balance roundrobin"
            line: "  server master{{ item.strip() }} {{ item }}:6443 check"
          with_items: master_ips

        - name: "restart load balancer"
          service:
            name: haproxy
            state: restarted

        - name: "check  load_balancer status"
          command: service haproxy status
          register: haproxy_status

        -
          debug: "msg={{ haproxy_status.stdout }}"

      name: "load balancer config block"
      when: haproxy_cfg.stat.exists and "'active (running)' in haproxy_status.stdout"
