# Copyright 2018 ARICENT HOLDINGS LUXEMBOURG SARL and Cable Television
# Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script is responsible for deploying Aricent_Iaas environments and
# Kubernetes Services
---
- hosts: localhost

  gather_facts: no

  vars:
    storage: "{{ storage_size }}"
    claim_name: "{{ claim_name }}"

  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

  tasks:
  - name: Apply template and copy {{ TASK_PV_CLAIM_CONF }} to {{ PROJ_ARTIFACT_DIR }}/task-pv-claim.yaml
    template:
      src: "{{ TASK_PV_CLAIM_CONF }}"
      dest: "{{ PROJ_ARTIFACT_DIR }}/task-pv-claim.yaml"

  - name: kubectl delete pv
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml delete pv {{ claim_name }}"
    ignore_errors: true

  - name: kubectl delete pvc 
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml delete pvc {{ claim_name }}"
    ignore_errors: true

  - name: Apply template and copy {{ TASK_PV_VOL_CONF }} to {{ PROJ_ARTIFACT_DIR }}/task-pv-volume.yaml
    template:
      src: "{{ TASK_PV_VOL_CONF }}"
      dest: "{{ PROJ_ARTIFACT_DIR }}/task-pv-volume.yaml"

  - name: Create persistent volume
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create -f {{ PROJ_ARTIFACT_DIR }}/task-pv-volume.yaml"
    register: cat
  - debug: var=cat.stdout_lines

  - name: kubectl get pv 
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml get pv"
    register: cat
  - debug: var=cat.stdout_lines

  - name: Create a PVC
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create -f {{ PROJ_ARTIFACT_DIR }}/task-pv-claim.yaml"

  - name: kubectl get pvc
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml get pvc"
    register: cat
  - debug: var=cat.stdout_lines
