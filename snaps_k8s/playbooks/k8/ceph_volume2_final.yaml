# Copyright 2018 ARICENT HOLDINGS LUXEMBOURG SARL and Cable Television
# Laboratories, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script is responsible for deploying Aricent_Iaas environments and
# Kubernetes Services
---
- hosts: localhost

  gather_facts: no

  vars:
    Ceph_storage: "{{ ceph_storage_size }}"
    Ceph_Claim_name: "{{ ceph_claim_name }}"
  
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

  tasks:
  - name: Creating pool at "{{ controller_host_name }}"
    become: true
    become_user: root
    become_method: sudo
    shell: ceph --cluster ceph osd pool create kube 1024 1024
    delegate_to: "{{ controller_host_name }}"
    ignore_errors: true

  - name: Grep keyring
    become: true
    become_user: root
    become_method: sudo
    shell: grep key "/etc/ceph/ceph.client.admin.keyring" | cut -d ' ' -f 3
    delegate_to: "{{ controller_host_name }}"
    register: cat
  - debug: var=cat.stdout_lines[0]
    ignore_errors: true

  - name: kubectl create secret generic ceph-secret1 --type="kubernetes.io/rbd" --from-literal=key='{{cat.stdout_lines[0]}}'
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create secret generic ceph-secret1 --type='kubernetes.io/rbd' --from-literal=key='{{cat.stdout_lines[0]}}'"

  - name: kubectl create secret generic ceph-secret-kube1 --type="kubernetes.io/rbd" --from-literal=key='{{cat.stdout_lines[0]}}' --namespace=default
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create secret generic ceph-secret-kube1 --type='kubernetes.io/rbd' --from-literal=key='{{cat.stdout_lines[0]}}' --namespace=default"

  - name: Deleting already existing claim
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml delete pvc {{ ceph_claim_name }}"

  - name: Grep Ceph Persistent volume if already created kubectl get pv | grep {{ ceph_claim_name }} | cut -d ' ' -f 1
    shell: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml get pv | grep {{ ceph_claim_name }} | cut -d ' ' -f 1"
    register: cat
  - debug: var=cat.stdout_lines[0]

  - name: Deleting already existing Ceph Persistant volume( kubectl delete pv {{cat.stdout_lines[0]}} )
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml delete pv {{cat.stdout_lines[0]}}"

  - name: Apply template and copy {{ CEPH_FAST_RDB_YML }} to {{ PROJ_ARTIFACT_DIR }}/ceph-storage-fast_rbd.yml
    template:
      src: "{{ CEPH_FAST_RDB_YML }}"
      dest: "{{ PROJ_ARTIFACT_DIR }}/ceph-storage-fast_rbd.yml"

  - name: creating storage class
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create -f {{ PROJ_ARTIFACT_DIR }}/ceph-storage-fast_rbd.yml --namespace=default"
    register: cat
  - debug: var=cat.stdout_lines

  - name: Apply template and copy {{ CEPH_VC_YML }} to {{ PROJ_ARTIFACT_DIR }}/ceph-vc.yml
    template:
      src: "{{ CEPH_VC_YML }}"
      dest: "{{ PROJ_ARTIFACT_DIR }}/ceph-vc.yml"

  - name: creating claim
    command: "kubectl --kubeconfig={{ PROJ_ARTIFACT_DIR }}/node-kubeconfig.yaml create -f {{ PROJ_ARTIFACT_DIR }}/ceph-vc.yml --namespace=default"
    register: cat
  - debug: var=cat.stdout_lines
